; RUN: cat %s | %apply-typeart -typeart-stack -typeart-filter-pointer-alloca=false -S 2>&1 | %filecheck %s
; RUN: cat %s | %apply-typeart -typeart-stack -typeart-call-filter -typeart-filter-pointer-alloca=false -S 2>&1 | %filecheck %s -check-prefix=CHECK-FILTER-EXP



declare dso_local void @MPI_sink(i32 %a)
declare dso_local void @bar(i32 %a)
declare dso_local void @baz(i32 %a)
declare dso_local void @bat(i32 %a)


define void foo(i32 %argument, i8** %data) {
  switch i32 %argument, label %4 [
    i32 1, label %5
    i32 2, label %2
    i32 3, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3, %2

  %6 = phi i32 (...)**
  	[ @bar, %4 ],
  	[ @baz, %3 ],
  	[ @bat, %2 ],
  	[ @MPI_sink, %1 ]
  %7 = call i8* @_Znwm(i64 8) #5
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** %6, i32 (...)*** %8, align 8, !tbaa !2
  %9 = bitcast i8* %7 to %class.A*
  ret %class.A* %9
}

define dso_local i32 @main(i32 %argc, i8** %argv) {

}